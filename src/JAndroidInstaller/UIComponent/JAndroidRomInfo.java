/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package JAndroidInstaller.UIComponent;

import Interface.AVideoDownloader;
import Interface.IDownloadProgressEvent;
import JAndroidInstaller.ROMLists.JRomRecordEntry;
import JAndroidInstaller.ROMLists.JRomRecordManager;
import Manager.DownloaderManager;
import WSwingUILib.Component.JMiddleContentPanel;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;

/**
 *
 * @author wcss
 */
public class JAndroidRomInfo extends JMiddleContentPanel implements IDownloadProgressEvent {

    private JRomRecordEntry localRecord;

    /**
     * Creates new form JAndroidRomInfo
     */
    public JAndroidRomInfo() {
        initComponents();
    }

    /**
     * Creates new form JAndroidRomInfo
     */
    public JAndroidRomInfo(JRomRecordEntry record) {
        initComponents();
        this.setLocalRecord(record);
        try {
            this.lblWelcome.setText(this.getLocalRecord().getRomName());
            this.lblDate.setText("发布日期：" + this.getLocalRecord().getRomMakeDate());
            this.lblMaker.setText("发布者：" + this.getLocalRecord().getRomMaker());
            this.lblVersion.setText("固件版本：" + this.getLocalRecord().getRomVersion());
            this.lblSort.setText("固件厂商：" + this.getLocalRecord().getRomSort());
            this.lblSize.setText("固件大小：" + this.getLocalRecord().getRomSize());
            
            if (this.getLocalRecord().getRomImageFile() != null && this.getLocalRecord().getRomImageFile().startsWith("http:"))
            {
                String pid = "photo_" + new Date().getTime();
                DownloaderManager.manager.createDownloader(pid, this.getLocalRecord().getRomImageFile(), "http",JRomRecordManager.bufferDir, 0, 0, this);
                DownloaderManager.manager.startDownloader(pid);
            }
            
            if (this.getLocalRecord().getRomReadme() != null && this.getLocalRecord().getRomReadme().startsWith("http:"))
            {
                String rid = "readme_" + new Date().getTime();
                DownloaderManager.manager.createDownloader(rid, this.getLocalRecord().getRomReadme(), "http", JRomRecordManager.bufferDir, 0, 0, this);
                DownloaderManager.manager.startDownloader(rid);
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        plImage = new WSwingUILib.Component.Base.JImagePanel();
        lblWelcome = new javax.swing.JLabel();
        lblDate = new javax.swing.JLabel();
        lblMaker = new javax.swing.JLabel();
        lblVersion = new javax.swing.JLabel();
        lblSort = new javax.swing.JLabel();
        lblSize = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtReadme = new javax.swing.JTextPane();

        plImage.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout plImageLayout = new javax.swing.GroupLayout(plImage);
        plImage.setLayout(plImageLayout);
        plImageLayout.setHorizontalGroup(
            plImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 290, Short.MAX_VALUE)
        );
        plImageLayout.setVerticalGroup(
            plImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 252, Short.MAX_VALUE)
        );

        lblWelcome.setFont(new java.awt.Font("文泉驿微米黑", 1, 18)); // NOI18N
        lblWelcome.setForeground(new java.awt.Color(0, 102, 255));
        lblWelcome.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblWelcome.setText("名称：");

        lblDate.setFont(new java.awt.Font("文泉驿微米黑", 1, 18)); // NOI18N
        lblDate.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblDate.setText("名称：");

        lblMaker.setFont(new java.awt.Font("文泉驿微米黑", 1, 18)); // NOI18N
        lblMaker.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblMaker.setText("名称：");

        lblVersion.setFont(new java.awt.Font("文泉驿微米黑", 1, 18)); // NOI18N
        lblVersion.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblVersion.setText("名称：");

        lblSort.setFont(new java.awt.Font("文泉驿微米黑", 1, 18)); // NOI18N
        lblSort.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblSort.setText("名称：");

        lblSize.setFont(new java.awt.Font("文泉驿微米黑", 1, 18)); // NOI18N
        lblSize.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblSize.setText("名称：");

        txtReadme.setEditable(false);
        txtReadme.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        txtReadme.setFont(new java.awt.Font("文泉驿微米黑", 0, 16)); // NOI18N
        jScrollPane1.setViewportView(txtReadme);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblWelcome, javax.swing.GroupLayout.DEFAULT_SIZE, 707, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(lblSort, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblVersion, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblMaker, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblDate, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblSize, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(plImage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblWelcome, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(plImage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(lblDate, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblMaker, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblVersion, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblSort, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblSize, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblMaker;
    private javax.swing.JLabel lblSize;
    private javax.swing.JLabel lblSort;
    private javax.swing.JLabel lblVersion;
    private javax.swing.JLabel lblWelcome;
    private WSwingUILib.Component.Base.JImagePanel plImage;
    private javax.swing.JTextPane txtReadme;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the localRecord
     */
    public JRomRecordEntry getLocalRecord() {
        return localRecord;
    }

    /**
     * @param localRecord the localRecord to set
     */
    public void setLocalRecord(JRomRecordEntry localRecord) {
        this.localRecord = localRecord;
    }

    @Override
    public void onReportProgress(AVideoDownloader avd, long l, long l1) {
        
    }

    @Override
    public void onReportError(AVideoDownloader avd, String string, String string1) {
        
    }

    @Override
    public void onReportFinish(AVideoDownloader avd)
    {
        if (avd.downloaderID.startsWith("photo"))
        {
            try {
                this.plImage.setImageIcon(new ImageIcon(ImageIO.read(new FileInputStream(avd.getVideoBufferUrl()))), true);
            } catch (Exception ex) {
                Logger.getLogger(JAndroidRomInfo.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else if (avd.downloaderID.startsWith("readme"))
        {
            try {
                String text = "";
                String[] cnts = JAppToolKit.JDataHelper.readAllLines(avd.getVideoBufferUrl());
                for(String s : cnts)
                {
                   text += s + "\n";
                }
                this.txtReadme.setText(text);
            } catch (Exception ex) {
                Logger.getLogger(JAndroidRomInfo.class.getName()).log(Level.SEVERE, null, ex);
            }
        }   
    }

    @Override
    public void onReportStatus(AVideoDownloader avd, String string) {
        
    }
}
