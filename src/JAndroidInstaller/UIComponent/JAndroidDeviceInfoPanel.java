/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package JAndroidInstaller.UIComponent;

import JAndroidInstaller.AndroidDevice.USBDeviceInfo;
import JAndroidInstaller.AndroidDevice.USBDeviceWorker;
import WSwingUILib.Component.JMiddleContentPanel;
import java.io.File;
import java.io.FileInputStream;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;

/**
 *
 * @author wcss
 */
public class JAndroidDeviceInfoPanel extends JMiddleContentPanel implements Runnable {

    /**
     * Creates new form JAndroidDeviceInfoPanel
     */
    public JAndroidDeviceInfoPanel() {
        initComponents();
        this.btnUploadImage.buttonText = "刷新";
    }

    public void load() {
        try 
        {
            new Thread(this).start();
            this.lblDeviceNe.setText("型号：" + USBDeviceInfo.getAndroidProductModelName());
            this.lblDeviceName.setText("型号：" + USBDeviceInfo.getAndroidProductModelName());
            this.lblRomVersionInfo.setText("固件版本号：" + USBDeviceInfo.getAndroidRomVersionInfo());
            this.lblAndroidVersion.setText("Android版本：" + USBDeviceInfo.getAndroidSystemVersion());
            this.lblCpuName.setText("芯片版本号：" + USBDeviceInfo.getAndroidCpuVersionName());
            this.lblPlatformName.setText("主板平台：" + USBDeviceInfo.getAndroidPlatformName());
            this.lblRomVersion.setText("版本号：" + USBDeviceInfo.getAndroidRomVersion());
            this.lblBuildDate.setText("制作日期：" + new Date(USBDeviceInfo.getAndroidSystemInfo("ro.build.date=")).toLocaleString());
            this.lblKernelVersion.setText("<html>内核版本：" + USBDeviceInfo.getKernelVersion() + "</html>");
            
            if (isUseFrameBuffer())
            {
                this.cbScreenSize.setVisible(true);                
            }else
            {
                this.cbScreenSize.setVisible(false);
            }
        } catch (Exception ex) {
            Logger.getLogger(JAndroidDeviceInfoPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        image = new WSwingUILib.Component.Base.JImagePanel();
        lblDeviceNe = new javax.swing.JLabel();
        btnUploadImage = new WSwingUILib.Component.JUIButton();
        lblDeviceName = new javax.swing.JLabel();
        lblRomVersionInfo = new javax.swing.JLabel();
        lblAndroidVersion = new javax.swing.JLabel();
        lblCpuName = new javax.swing.JLabel();
        lblPlatformName = new javax.swing.JLabel();
        lblRomVersion = new javax.swing.JLabel();
        lblKernelVersion = new javax.swing.JLabel();
        lblBuildDate = new javax.swing.JLabel();
        cbScreenSize = new javax.swing.JComboBox();

        image.setBackground(new java.awt.Color(0, 0, 0));
        image.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout imageLayout = new javax.swing.GroupLayout(image);
        image.setLayout(imageLayout);
        imageLayout.setHorizontalGroup(
            imageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        imageLayout.setVerticalGroup(
            imageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 355, Short.MAX_VALUE)
        );

        lblDeviceNe.setFont(new java.awt.Font("文泉驿微米黑", 1, 14)); // NOI18N
        lblDeviceNe.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDeviceNe.setText("jLabel1");

        btnUploadImage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnUploadImageMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout btnUploadImageLayout = new javax.swing.GroupLayout(btnUploadImage);
        btnUploadImage.setLayout(btnUploadImageLayout);
        btnUploadImageLayout.setHorizontalGroup(
            btnUploadImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 64, Short.MAX_VALUE)
        );
        btnUploadImageLayout.setVerticalGroup(
            btnUploadImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 32, Short.MAX_VALUE)
        );

        lblDeviceName.setFont(new java.awt.Font("文泉驿微米黑", 1, 18)); // NOI18N
        lblDeviceName.setText("型号");

        lblRomVersionInfo.setFont(new java.awt.Font("文泉驿微米黑", 1, 18)); // NOI18N
        lblRomVersionInfo.setText("固件版本号");

        lblAndroidVersion.setFont(new java.awt.Font("文泉驿微米黑", 1, 18)); // NOI18N
        lblAndroidVersion.setText("Android版本");

        lblCpuName.setFont(new java.awt.Font("文泉驿微米黑", 1, 18)); // NOI18N
        lblCpuName.setText("芯片");

        lblPlatformName.setFont(new java.awt.Font("文泉驿微米黑", 1, 18)); // NOI18N
        lblPlatformName.setText("主板平台");

        lblRomVersion.setFont(new java.awt.Font("文泉驿微米黑", 1, 18)); // NOI18N
        lblRomVersion.setText("版本号");

        lblKernelVersion.setFont(new java.awt.Font("文泉驿微米黑", 1, 18)); // NOI18N
        lblKernelVersion.setText("内核版本：");

        lblBuildDate.setFont(new java.awt.Font("文泉驿微米黑", 1, 18)); // NOI18N
        lblBuildDate.setText("制作日期");

        cbScreenSize.setFont(new java.awt.Font("文泉驿微米黑", 1, 14)); // NOI18N
        cbScreenSize.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "240*320", "240*400", "320*480", "480*640", "480*800", "768*1024", "800*1280" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnUploadImage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbScreenSize, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(image, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblDeviceNe, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 89, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblRomVersion, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 423, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDeviceName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 423, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblRomVersionInfo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 423, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAndroidVersion, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 423, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCpuName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 423, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPlatformName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 423, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblBuildDate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 423, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblKernelVersion, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 423, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(image, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblDeviceNe, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnUploadImage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbScreenSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblDeviceName, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblRomVersion, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblRomVersionInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblAndroidVersion, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblCpuName, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblPlatformName, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblBuildDate, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblKernelVersion, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    /**
     * 是否只能采用FrameBuffer方式获取图片
     * @return
     * @throws Exception 
     */
    public Boolean isUseFrameBuffer() throws Exception
    {
        ArrayList<String> lines = USBDeviceWorker.shellCmdWithResult("screenshot --help");
        if (lines.size() > 0)
        {
            if (lines.get(0).endsWith("not found"))
            {
                return true;
            }else
            {
                return false;
            }
        }else
        {
            return true;
        }
    }
    
    private void btnUploadImageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUploadImageMouseClicked
        // TODO add your handling code here:
        uploadAndroidScreen();
    }//GEN-LAST:event_btnUploadImageMouseClicked
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private WSwingUILib.Component.JUIButton btnUploadImage;
    private javax.swing.JComboBox cbScreenSize;
    private WSwingUILib.Component.Base.JImagePanel image;
    private javax.swing.JLabel lblAndroidVersion;
    private javax.swing.JLabel lblBuildDate;
    private javax.swing.JLabel lblCpuName;
    private javax.swing.JLabel lblDeviceName;
    private javax.swing.JLabel lblDeviceNe;
    private javax.swing.JLabel lblKernelVersion;
    private javax.swing.JLabel lblPlatformName;
    private javax.swing.JLabel lblRomVersion;
    private javax.swing.JLabel lblRomVersionInfo;
    // End of variables declaration//GEN-END:variables

    private void uploadAndroidScreen() {
        try {
            USBDeviceInfo.saveDeviceScreen(JAppToolKit.JRunHelper.getCmdRunScriptBufferDir() + "/androidscreen.png", this.cbScreenSize.getSelectedItem().toString());
            if (new File(JAppToolKit.JRunHelper.getCmdRunScriptBufferDir() + "/androidscreen.png").exists()) {
                image.setImageIcon(new ImageIcon(ImageIO.read(new FileInputStream(JAppToolKit.JRunHelper.getCmdRunScriptBufferDir() + "/androidscreen.png"))), true);
            }
        } catch (Exception ex) {
            Logger.getLogger(JAndroidDeviceInfoPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    @Override
    public void run() 
    {
        uploadAndroidScreen();
    }
}
