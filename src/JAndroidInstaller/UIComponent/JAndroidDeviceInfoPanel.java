/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package JAndroidInstaller.UIComponent;

import JAndroidInstaller.AndroidDevice.USBDeviceInfo;
import JAndroidInstaller.AndroidDevice.USBDeviceWorker;
import WSwingUILib.Component.JMiddleContentPanel;
import java.io.File;
import java.io.FileInputStream;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;

/**
 *
 * @author wcss
 */
public class JAndroidDeviceInfoPanel extends JMiddleContentPanel implements Runnable {

    Boolean enabledUpdatePhoneImage = true;
    /**
     * Creates new form JAndroidDeviceInfoPanel
     */
    public JAndroidDeviceInfoPanel() {
        initComponents();
        this.btnUploadImage.setButtonText("刷新");
    }

    @Override
    public void load() {
        try 
        {
            if (enabledUpdatePhoneImage)
            {
               enabledUpdatePhoneImage = false;
               new Thread(this).start();
            }
            
            this.lblDeviceNe.setText("型号：" + USBDeviceInfo.getAndroidProductModelName());
            this.lblDeviceName.setText("型号：" + USBDeviceInfo.getAndroidProductModelName());
            this.lblRomVersionInfo.setText("固件版本号：" + USBDeviceInfo.getAndroidRomVersionInfo());
            this.lblAndroidVersion.setText("Android版本：" + USBDeviceInfo.getAndroidSystemVersion());
            this.lblCpuName.setText("芯片版本号：" + USBDeviceInfo.getAndroidCpuVersionName());
            this.lblPlatformName.setText("主板平台：" + USBDeviceInfo.getAndroidPlatformName());
            this.lblRomVersion.setText("版本号：" + USBDeviceInfo.getAndroidRomVersion());

        } catch (Exception ex) {
            ex.printStackTrace();
        }
        
        try
        {
            this.lblBatterys.setText("剩余电量：" + USBDeviceInfo.getCurrentBatteryCapacity() + "%");            
        }catch(Exception ex)
        {
            this.lblBatterys.setText("剩余电量：unkown");
        }
        
        try {
            this.lblBuildDate.setText("制作日期：" + new Date(USBDeviceInfo.getAndroidSystemInfo("ro.build.date=")).toLocaleString());
        } catch (Exception ex) {
            Logger.getLogger(JAndroidDeviceInfoPanel.class.getName()).log(Level.SEVERE, null, ex);
            this.lblBuildDate.setText("制作日期：unknow");
        }
        try {
            this.lblKernelVersion.setText("<html>内核版本：" + USBDeviceInfo.getKernelVersion() + "</html>");
        } catch (Exception ex) {
            Logger.getLogger(JAndroidDeviceInfoPanel.class.getName()).log(Level.SEVERE, null, ex);
            this.lblKernelVersion.setText("内核版本：" + "unknow");
        }

        try {
            this.lblDeviceState.setText("设备状态：" + USBDeviceWorker.getAndroidState());

        } catch (Exception ex) {
            Logger.getLogger(JAndroidDeviceInfoPanel.class.getName()).log(Level.SEVERE, null, ex);
            this.lblDeviceState.setText("设备状态：unknow");
        }

        try {
            checkAndroidRoot();

            if (isUseFrameBuffer()) {
                this.cbScreenSize.setVisible(true);
            } else {
                this.cbScreenSize.setVisible(false);
            }
        } catch (Exception ex) {
            Logger.getLogger(JAndroidDeviceInfoPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void checkAndroidRoot() {
        try {
            if (USBDeviceWorker.installedRootTools()) {
                this.lblRootInfo.setText("** 很高兴的告诉您!本机已root!");
            } else {
                this.lblRootInfo.setText("** 对不起,您的设备没有root!");
            }
        } catch (Exception ex) {
            Logger.getLogger(JAPKInstallerUI.class.getName()).log(Level.SEVERE, null, ex);
            this.lblRootInfo.setText("** 对不起,您的设备没有root!");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblDeviceNe = new javax.swing.JLabel();
        btnUploadImage = new WSwingUILib.Component.JUIButton();
        lblDeviceName = new javax.swing.JLabel();
        lblRomVersionInfo = new javax.swing.JLabel();
        lblAndroidVersion = new javax.swing.JLabel();
        lblCpuName = new javax.swing.JLabel();
        lblPlatformName = new javax.swing.JLabel();
        lblRomVersion = new javax.swing.JLabel();
        lblKernelVersion = new javax.swing.JLabel();
        lblBuildDate = new javax.swing.JLabel();
        cbScreenSize = new javax.swing.JComboBox();
        lblRootInfo = new javax.swing.JLabel();
        lblDeviceState = new javax.swing.JLabel();
        jPhoneImagePanel1 = new JAndroidInstaller.UIComponent.JPhoneImagePanel();
        image = new WSwingUILib.Component.Base.JImagePanel();
        btnLook = new WSwingUILib.Component.JUIButton();
        lblBatterys = new javax.swing.JLabel();

        lblDeviceNe.setFont(new java.awt.Font("文泉驿微米黑", 1, 14)); // NOI18N
        lblDeviceNe.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDeviceNe.setText("jLabel1");

        btnUploadImage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnUploadImageMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout btnUploadImageLayout = new javax.swing.GroupLayout(btnUploadImage);
        btnUploadImage.setLayout(btnUploadImageLayout);
        btnUploadImageLayout.setHorizontalGroup(
            btnUploadImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 52, Short.MAX_VALUE)
        );
        btnUploadImageLayout.setVerticalGroup(
            btnUploadImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 32, Short.MAX_VALUE)
        );

        lblDeviceName.setFont(new java.awt.Font("文泉驿微米黑", 1, 14)); // NOI18N
        lblDeviceName.setText("型号");

        lblRomVersionInfo.setFont(new java.awt.Font("文泉驿微米黑", 1, 14)); // NOI18N
        lblRomVersionInfo.setText("固件版本号");

        lblAndroidVersion.setFont(new java.awt.Font("文泉驿微米黑", 1, 14)); // NOI18N
        lblAndroidVersion.setText("Android版本");

        lblCpuName.setFont(new java.awt.Font("文泉驿微米黑", 1, 14)); // NOI18N
        lblCpuName.setText("芯片");

        lblPlatformName.setFont(new java.awt.Font("文泉驿微米黑", 1, 14)); // NOI18N
        lblPlatformName.setText("主板平台");

        lblRomVersion.setFont(new java.awt.Font("文泉驿微米黑", 1, 14)); // NOI18N
        lblRomVersion.setText("版本号");

        lblKernelVersion.setFont(new java.awt.Font("文泉驿微米黑", 1, 14)); // NOI18N
        lblKernelVersion.setText("内核版本：");
        lblKernelVersion.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        lblBuildDate.setFont(new java.awt.Font("文泉驿微米黑", 1, 14)); // NOI18N
        lblBuildDate.setText("制作日期");

        cbScreenSize.setFont(new java.awt.Font("文泉驿微米黑", 1, 14)); // NOI18N
        cbScreenSize.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "240*320", "240*400", "320*480", "480*640", "480*800", "768*1024", "800*1280" }));

        lblRootInfo.setFont(new java.awt.Font("文泉驿微米黑", 1, 14)); // NOI18N
        lblRootInfo.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblRootInfo.setText("jLabel1");

        lblDeviceState.setFont(new java.awt.Font("文泉驿微米黑", 1, 14)); // NOI18N
        lblDeviceState.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblDeviceState.setText("状态");

        image.setBackground(new java.awt.Color(0, 0, 0));
        image.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        image.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                imageMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout imageLayout = new javax.swing.GroupLayout(image);
        image.setLayout(imageLayout);
        imageLayout.setHorizontalGroup(
            imageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 175, Short.MAX_VALUE)
        );
        imageLayout.setVerticalGroup(
            imageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 276, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPhoneImagePanel1Layout = new javax.swing.GroupLayout(jPhoneImagePanel1);
        jPhoneImagePanel1.setLayout(jPhoneImagePanel1Layout);
        jPhoneImagePanel1Layout.setHorizontalGroup(
            jPhoneImagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPhoneImagePanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(image, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );
        jPhoneImagePanel1Layout.setVerticalGroup(
            jPhoneImagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPhoneImagePanel1Layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(image, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(77, Short.MAX_VALUE))
        );

        btnLook.setButtonText("预览");
        btnLook.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnLookMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout btnLookLayout = new javax.swing.GroupLayout(btnLook);
        btnLook.setLayout(btnLookLayout);
        btnLookLayout.setHorizontalGroup(
            btnLookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 51, Short.MAX_VALUE)
        );
        btnLookLayout.setVerticalGroup(
            btnLookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 33, Short.MAX_VALUE)
        );

        lblBatterys.setFont(new java.awt.Font("文泉驿微米黑", 1, 18)); // NOI18N
        lblBatterys.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblBatterys.setText("jLabel1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblDeviceNe, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnUploadImage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbScreenSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnLook, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPhoneImagePanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblRootInfo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(lblDeviceState, javax.swing.GroupLayout.PREFERRED_SIZE, 423, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblDeviceName, javax.swing.GroupLayout.PREFERRED_SIZE, 423, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblRomVersion, javax.swing.GroupLayout.PREFERRED_SIZE, 423, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblRomVersionInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 423, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblAndroidVersion, javax.swing.GroupLayout.PREFERRED_SIZE, 423, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblCpuName, javax.swing.GroupLayout.PREFERRED_SIZE, 423, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblPlatformName, javax.swing.GroupLayout.PREFERRED_SIZE, 423, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblBuildDate, javax.swing.GroupLayout.PREFERRED_SIZE, 423, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblKernelVersion, javax.swing.GroupLayout.PREFERRED_SIZE, 423, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblBatterys, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 423, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblBatterys, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblDeviceState)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblDeviceName, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblRomVersion)
                        .addGap(7, 7, 7)
                        .addComponent(lblRomVersionInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblAndroidVersion, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblCpuName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblPlatformName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblBuildDate, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblKernelVersion, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblRootInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPhoneImagePanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblDeviceNe)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnUploadImage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(cbScreenSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnLook, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(36, Short.MAX_VALUE))))
        );
    }// </editor-fold>//GEN-END:initComponents

    /**
     * 是否只能采用FrameBuffer方式获取图片
     *
     * @return
     * @throws Exception
     */
    public Boolean isUseFrameBuffer() throws Exception {
        ArrayList<String> lines = USBDeviceWorker.shellCmdWithResult("screenshot --help");
        if (lines.size() > 0) {
            if (lines.get(0).endsWith("not found")) {
                return true;
            } else {
                return false;
            }
        } else {
            return true;
        }
    }

    private void btnUploadImageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUploadImageMouseClicked
        // TODO add your handling code here:
        uploadAndroidScreen();
    }//GEN-LAST:event_btnUploadImageMouseClicked

    private void imageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imageMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2)
        {
            this.getMainPanel().showContentPanel(new JAndroidDevicePhotoManager());
        }
    }//GEN-LAST:event_imageMouseClicked

    private void btnLookMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLookMouseClicked
        // TODO add your handling code here:
        this.getMainPanel().showContentPanel(new JAndroidDevicePhotoManager());
    }//GEN-LAST:event_btnLookMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private WSwingUILib.Component.JUIButton btnLook;
    private WSwingUILib.Component.JUIButton btnUploadImage;
    private javax.swing.JComboBox cbScreenSize;
    private WSwingUILib.Component.Base.JImagePanel image;
    private JAndroidInstaller.UIComponent.JPhoneImagePanel jPhoneImagePanel1;
    private javax.swing.JLabel lblAndroidVersion;
    private javax.swing.JLabel lblBatterys;
    private javax.swing.JLabel lblBuildDate;
    private javax.swing.JLabel lblCpuName;
    private javax.swing.JLabel lblDeviceName;
    private javax.swing.JLabel lblDeviceNe;
    private javax.swing.JLabel lblDeviceState;
    private javax.swing.JLabel lblKernelVersion;
    private javax.swing.JLabel lblPlatformName;
    private javax.swing.JLabel lblRomVersion;
    private javax.swing.JLabel lblRomVersionInfo;
    private javax.swing.JLabel lblRootInfo;
    // End of variables declaration//GEN-END:variables

    private void uploadAndroidScreen() {
        try {
            USBDeviceInfo.saveDeviceScreen(JAppToolKit.JRunHelper.getCmdRunScriptBufferDir() + "/androidscreen.png", this.cbScreenSize.getSelectedItem().toString());
            if (new File(JAppToolKit.JRunHelper.getCmdRunScriptBufferDir() + "/androidscreen.png").exists()) {
                image.setImageIcon(new ImageIcon(ImageIO.read(new FileInputStream(JAppToolKit.JRunHelper.getCmdRunScriptBufferDir() + "/androidscreen.png"))), true);
            }
        } catch (Exception ex) {
            Logger.getLogger(JAndroidDeviceInfoPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    @Override
    public void run() {
        uploadAndroidScreen();
    }
}
